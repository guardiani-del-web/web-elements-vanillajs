'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-869cff5b.js');
const index$1 = require('./index-27e82903.js');

const Accordion = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.openId = index$1.generateUniqueId();
        this.closeId = index$1.generateUniqueId();
        this.accordionCallback = index.createEvent(this, "accordionCallback", 7);
    }
    handleChange(event) {
        this.accordionCallback.emit(event.target.value);
    }
    render() {
        return (index.h(index.Host, { "data-id": this.openId }, index.h("input", { type: "radio", name: "accordion", id: this.openId, checked: this.open, value: this.openId, onChange: this.handleChange.bind(this) }), index.h("section", { class: "accordion" }, index.h("label", { class: "accordion-title", htmlFor: this.openId }, index.h("slot", { name: "title" })), index.h("label", { class: "accordion-close", htmlFor: this.closeId }), index.h("div", { class: "accordion-content" }, index.h("slot", { name: "content" }))), index.h("input", { type: "radio", name: "accordion", id: this.closeId })));
    }
    static get style() { return "\@charset \"UTF-8\";:host{display:block}:host input{display:none}:host we-accordion:first-of-type{border-top-left-radius:0.625em;border-top-right-radius:0.625em}:host .accordion{position:var(--container-position, relative);background:var(--container-background, #fff);height:var(--container-height, 3.375rem);-webkit-transition:var(--container-transition, all 0.15s ease-in-out);transition:var(--container-transition, all 0.15s ease-in-out);-webkit-box-shadow:var(--container-box-shadow, 0 -0.063rem 0 #e5e5e5, 0 0 0.125rem rgba(0, 0, 0, 0.12), 0 0.125rem 0.25rem rgba(0, 0, 0, 0.24));box-shadow:var(--container-box-shadow, 0 -0.063rem 0 #e5e5e5, 0 0 0.125rem rgba(0, 0, 0, 0.12), 0 0.125rem 0.25rem rgba(0, 0, 0, 0.24))}:host .accordion .accordion-title{width:var(--title-width, calc(100% - 4rem));height:var(--title-height, 3.375rem);line-height:var(--title-line-height, 3.375rem);padding:var(--title-padding, 0 2.75rem 0 1.25rem);display:var(--title-display, inline-block);cursor:var(--title-cursor, pointer);-webkit-user-select:var(--title-user-select, none);-moz-user-select:var(--title-user-select, none);-ms-user-select:var(--title-user-select, none);user-select:var(--title-user-select, none)}:host .accordion .accordion-title:before{position:var(--icon-position, absolute);display:var(--icon-display, block);content:var(--icon-content, \"â€º\");font-size:var(--icon-font-size, 1.5rem);top:var(--icon-top, -0.125rem);bottom:var(--icon-bottom, initial);left:var(--icon-initial, initial);right:var(--icon-right, 1.25rem);-webkit-transition:var(--icon-transition, transform 0.15s ease-in-out);transition:var(--icon-transition, transform 0.15s ease-in-out);color:var(--icon-color, rgba(0, 0, 0, 0.54));-webkit-transform:var(--icon-transform, rotate(0deg));transform:var(--icon-transform, rotate(0deg))}:host .accordion .accordion-content{width:var(--content-width, calc(100% - 2.5rem));padding:var(--content-padding, 1.25rem);font-size:var(--content-font-size, 0.938rem);color:var(--content-color, rgba(0, 0, 0, 0.54));display:none}:host .accordion .accordion-close{position:absolute;height:3.375rem;width:100%;top:0;left:0;cursor:pointer;display:none}:host input:checked+.accordion{height:auto}:host input:checked+.accordion .accordion-title{border-bottom:var(--title-border-bottom-opened, 0.063rem solid rgba(0, 0, 0, 0.18))}:host input:checked+.accordion .accordion-title:before{-webkit-transform:var(--title-transform-opened, rotate(90deg));transform:var(--title-transform-opened, rotate(90deg))}:host input:checked+.accordion .accordion-content,:host input:checked+.accordion .accordion-close{display:inline-block}"; }
};

const AccordionGroup = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    accordionCallbackHandler(event) {
        const value = event.detail;
        if (!this.multiple) {
            const accordions = this.el.querySelectorAll('we-accordion');
            accordions.forEach((accordion) => {
                if (accordion.getAttribute('data-id') === value) {
                    accordion.setAttribute('open', 'true');
                }
                else {
                    accordion.setAttribute('open', 'false');
                }
            });
        }
    }
    render() {
        return index.h("slot", null);
    }
    get el() { return index.getElement(this); }
};

exports.we_accordion = Accordion;
exports.we_accordion_group = AccordionGroup;
