import { r as registerInstance, c as createEvent, h, H as Host } from './index-57b84139.js';

const Checkbox = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.checkedState = this.checked;
        this.checkboxCallback = createEvent(this, "checkboxCallback", 7);
    }
    handleChange() {
        this.checkedState = !this.checkedState;
        this.checkboxCallback.emit({ value: this.value, checked: this.checkedState });
    }
    render() {
        return (h(Host, null, h("input", { type: "checkbox", id: "wecheckbox", value: this.value, disabled: this.disabled, checked: this.checked, onChange: this.handleChange.bind(this) }), h("label", { htmlFor: "wecheckbox" }, h("slot", null))));
    }
    static get style() { return "\@charset \"UTF-8\";:host{display:block}input[type=checkbox]{display:none}input[type=checkbox]+label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin:var(--label-margin, 0.2em);cursor:pointer;padding:var(--label-padding, 0.2em)}input[type=checkbox]+label:before{content:var(--icon-content, \"âœ”\");border:var(--icon-border, 1px solid #212121);border-radius:var(--icon-border-radius, 0.2em);display:inline-block;width:var(--icon-width, 1em);height:var(--icon-heigth, 1em);padding:var(--icon-padding, 0 0 0.3em 0.2em);margin:var(--icon-margin, 0 0.3em 0 0);color:transparent}input[type=checkbox]:checked+label:before{background-color:var(--checked-background-color, #3f51b5);border-color:var(--checked-border-color, #3f51b5);color:var(--checked-color, #ffffff)}input[type=checkbox]:disabled+label:before{border-color:var(--disabled-border-color, #aaa)}input[type=checkbox]:checked:disabled+label:before{background-color:var(--checked-disabled-background-color, #aaa);border-color:var(--checked-disabled-border-color, #aaa)}"; }
};

export { Checkbox as we_checkbox };
