import { ComponentInterface, EventEmitter } from '../../stencil-public-runtime';
export interface ChipsValueRemove {
    value: string;
}
export interface ChipsValueSelect {
    value: string;
    isSelected: boolean;
}
export declare class Chips implements ComponentInterface {
    /** Value passed on event when chips selected or removed */
    value: string;
    /** Center text written inside the chips if you want a text inside the chips */
    label: string;
    /** Src of img you want to put in left side of chips if you want an image in that position*/
    srcImgLeft: string;
    /** Src of img you want to put in right side of chips if you want an image in that position */
    srcImgRight: string;
    /** If true the chips will be removed when user click on left image inside chips and removeChipsCallback event is triggered */
    removeLeft: boolean;
    /** If true the chips will be removed when user click on right image inside chips and removeChipsCallback event is triggered */
    removeRight: boolean;
    isVisible: boolean;
    /** Event triggered when the chips is removed */
    removeChipsCallback: EventEmitter<ChipsValueRemove>;
    /** If true user can select the chips and selectChipsCallback event is triggered */
    isSelectable: boolean;
    isSelected: boolean;
    /** Event triggered when the chips is selected */
    selectChipsCallback: EventEmitter<ChipsValueSelect>;
    handleRemoveChips(side: any): void;
    handleSelectedChips(): void;
    render(): any;
}
