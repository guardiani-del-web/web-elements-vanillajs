import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-57b84139.js';
var RadioGroup = /** @class */ (function () {
    function RadioGroup(hostRef) {
        registerInstance(this, hostRef);
        this.children = [];
        this.radioGroupCallback = createEvent(this, "radioGroupCallback", 7);
    }
    RadioGroup.prototype.radioCallbackHandler = function (prop) {
        var value = prop.detail.value;
        this.children.forEach(function (child) {
            if (child['value'] == value)
                child['checked'] = true;
            else
                child['checked'] = false;
        });
        var radios = this.el.querySelectorAll(':scope > we-radio');
        radios.forEach(function (radio) {
            var valueAttribute = radio.getAttribute('value');
            if (value != valueAttribute)
                radio.setAttribute('checked', 'false');
            else
                radio.setAttribute('checked', 'true');
        });
        this.radioGroupCallback.emit({ value: this.value, children: this.children });
    };
    RadioGroup.prototype.componentDidLoad = function () {
        var _this = this;
        var radios = this.el.querySelectorAll(':scope > we-radio');
        radios.forEach(function (radio) {
            var child = {};
            var value = radio.getAttribute('value');
            child['value'] = value;
            var checked = radio.getAttribute('checked');
            child['checked'] = checked === 'true' ? true : false;
            _this.children.push(child);
        });
    };
    RadioGroup.prototype.render = function () {
        return (h(Host, null, h("slot", null)));
    };
    Object.defineProperty(RadioGroup.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    return RadioGroup;
}());
export { RadioGroup as we_radio_group };
