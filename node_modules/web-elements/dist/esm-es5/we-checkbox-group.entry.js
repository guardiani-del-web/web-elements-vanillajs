import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-57b84139.js';
var CheckboxGroup = /** @class */ (function () {
    function CheckboxGroup(hostRef) {
        registerInstance(this, hostRef);
        this.children = [];
        this.checkboxGroupCallback = createEvent(this, "checkboxGroupCallback", 7);
    }
    CheckboxGroup.prototype.checkboxCallbackHandler = function (prop) {
        var _a = prop.detail, value = _a.value, checked = _a.checked;
        this.children.forEach(function (child) {
            if (child['value'] == value) {
                child['checked'] = checked;
            }
        });
        this.checkboxGroupCallback.emit({ value: this.value, children: this.children });
    };
    CheckboxGroup.prototype.componentDidLoad = function () {
        var _this = this;
        var items = this.el.querySelectorAll(':scope > we-checkbox');
        items.forEach(function (i) {
            var child = {};
            var value = i.getAttribute('value');
            child['value'] = value;
            var checked = i.getAttribute('checked');
            child['checked'] = checked === 'true' ? true : false;
            _this.children.push(child);
        });
    };
    CheckboxGroup.prototype.render = function () {
        return (h(Host, null, h("slot", null)));
    };
    Object.defineProperty(CheckboxGroup.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    return CheckboxGroup;
}());
export { CheckboxGroup as we_checkbox_group };
