import { Host, h } from "@stencil/core";
export class Switch {
    constructor() {
        /** Default value of switch when component is rendered the first time */
        this.checked = false;
        this.checkedState = this.checked;
    }
    handleChangeState() {
        this.checkedState = !this.checkedState;
        this.switchCallback.emit({ value: this.value, checked: this.checkedState });
    }
    render() {
        return (h(Host, null,
            h("input", { type: "checkbox", id: "switch", name: this.value, onChange: this.handleChangeState.bind(this), checked: this.checked }),
            h("label", { class: "switch", htmlFor: "switch" }),
            this.labelLeft && h("label", { class: "left" }, "Off"),
            this.labelRight && h("label", { class: "right" }, "On")));
    }
    static get is() { return "we-switch"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["switch.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["switch.css"]
    }; }
    static get properties() { return {
        "value": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Value of switch, put in the payload of changeCallback event"
            },
            "attribute": "value",
            "reflect": false
        },
        "labelLeft": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Text put in the left of switch"
            },
            "attribute": "label-left",
            "reflect": false
        },
        "labelRight": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Text put in the right of switch"
            },
            "attribute": "label-right",
            "reflect": false
        },
        "checked": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Default value of switch when component is rendered the first time"
            },
            "attribute": "checked",
            "reflect": false,
            "defaultValue": "false"
        }
    }; }
    static get states() { return {
        "checkedState": {}
    }; }
    static get events() { return [{
            "method": "switchCallback",
            "name": "switchCallback",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Event triggered any time user change the state of the switch putting in the payload value and status"
            },
            "complexType": {
                "original": "SwitchValue",
                "resolved": "SwitchValue",
                "references": {
                    "SwitchValue": {
                        "location": "local"
                    }
                }
            }
        }]; }
}
