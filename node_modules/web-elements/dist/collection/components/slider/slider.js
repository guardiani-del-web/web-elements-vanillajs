import { Host, h } from "@stencil/core";
import { parseFunction } from '@utils';
export class WeSlider {
    constructor() {
        /** Identify if slider is disabled or not */
        this.disabled = false;
    }
    handleChange(event) {
        if (this.changeCallback) {
            this.changeCallback = parseFunction(this.changeCallback);
            this.changeCallback({ name: this.name, value: event.target.value });
        }
    }
    render() {
        return (h(Host, null,
            h("label", { htmlFor: "weslider" },
                h("slot", null)),
            h("input", { type: "range", id: "weslider", name: this.name, min: this.min, max: this.max, value: this.value, disabled: this.disabled, onChange: this.handleChange.bind(this) })));
    }
    static get is() { return "we-slider"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["slider.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["slider.css"]
    }; }
    static get properties() { return {
        "name": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Name of slider, put in the payload of changeCallback event"
            },
            "attribute": "name",
            "reflect": false
        },
        "value": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Starting value of slider"
            },
            "attribute": "value",
            "reflect": false
        },
        "min": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Minimum value you can set in the slider"
            },
            "attribute": "min",
            "reflect": false
        },
        "max": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Maximum value you can set in the slider"
            },
            "attribute": "max",
            "reflect": false
        },
        "disabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Identify if slider is disabled or not"
            },
            "attribute": "disabled",
            "reflect": false,
            "defaultValue": "false"
        },
        "changeCallback": {
            "type": "any",
            "mutable": false,
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Event triggered any time user moves the slider putting in the payload name and current value"
            },
            "attribute": "change-callback",
            "reflect": false
        }
    }; }
}
