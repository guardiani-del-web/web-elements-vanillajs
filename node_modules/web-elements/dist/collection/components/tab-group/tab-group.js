import { Host, h } from "@stencil/core";
export class TabGroup {
    constructor() {
        this.contentSlot = document.createElement('div');
        this.contentSlot.slot = 'tab-content';
        this.tabs = this.el.querySelectorAll('we-tab');
    }
    tabCallbackHandler(event) {
        const value = event.detail;
        const line = this.el.shadowRoot.querySelector('.line');
        this.tabs.forEach((tab, tabPosition) => {
            tab.style.width = `${100 / this.tabs.length}%`;
            if (tab.getAttribute('data-id') === value) {
                const left = tabPosition * (100 / this.tabs.length);
                const currentContent = tab.querySelector('[slot="content"]');
                this.contentSlot.innerHTML = currentContent.innerHTML;
                this.el.appendChild(this.contentSlot);
                tab.setAttribute('enabled', 'true');
                line.style.left = `${left}%`;
            }
            else {
                tab.setAttribute('enabled', 'false');
            }
        });
    }
    initTabs() {
        const line = this.el.shadowRoot.querySelector('.line');
        let getTabEnabledPosition = 0;
        this.tabs.forEach((tab, position) => {
            if (tab.getAttribute('enabled') === 'true') {
                getTabEnabledPosition = position;
            }
            tab.style.width = `${100 / this.tabs.length}%`;
        });
        const defaultContent = this.tabs[getTabEnabledPosition].querySelector('[slot="content"]');
        const left = getTabEnabledPosition * (100 / this.tabs.length);
        line.style.left = `${left}%`;
        this.contentSlot.innerHTML = defaultContent.innerHTML;
        line.style.width = `${100 / this.tabs.length}%`;
        this.el.appendChild(this.contentSlot);
    }
    componentDidRender() {
        this.initTabs();
    }
    render() {
        return (h(Host, null,
            h("header", null,
                h("slot", null),
                h("div", { class: "line" })),
            h("slot", { name: "tab-content" })));
    }
    static get is() { return "we-tab-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["tab-group.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["tab-group.css"]
    }; }
    static get states() { return {
        "contentSlot": {},
        "tabs": {}
    }; }
    static get elementRef() { return "el"; }
    static get listeners() { return [{
            "name": "tabCallback",
            "method": "tabCallbackHandler",
            "target": undefined,
            "capture": false,
            "passive": false
        }]; }
}
