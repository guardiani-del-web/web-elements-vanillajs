import { Host, h } from "@stencil/core";
export class Radio {
    handleChange() {
        this.radioCallback.emit({ value: this.value });
    }
    render() {
        return (h(Host, null,
            h("input", { type: "radio", id: "weradio", value: this.value, disabled: this.disabled, checked: this.checked, onChange: this.handleChange.bind(this) }),
            h("label", { htmlFor: "weradio" },
                h("slot", null))));
    }
    static get is() { return "we-radio"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["radio.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["radio.css"]
    }; }
    static get properties() { return {
        "value": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Value returned when the input is submitted if this radio button is checked"
            },
            "attribute": "value",
            "reflect": false
        },
        "disabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Identify if this radio button is disabled or not"
            },
            "attribute": "disabled",
            "reflect": false
        },
        "checked": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "identify if this radio button is checked or not when the page is loaded"
            },
            "attribute": "checked",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "radioCallback",
            "name": "radioCallback",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Event triggered when this radio button is checked/not checked returning the value prop for payload"
            },
            "complexType": {
                "original": "RadioValue",
                "resolved": "RadioValue",
                "references": {
                    "RadioValue": {
                        "location": "local"
                    }
                }
            }
        }]; }
}
